@inject NavigationManager Navigation

@namespace Importation.Components.Modals

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private CultureInfo SelectedCulture { get; set; } = CultureInfo.CurrentCulture;

    private void Close() => OnClose.InvokeAsync(null);

    private void ApplyCulture()
    {
        if (CultureInfo.CurrentCulture != SelectedCulture)
        {
            var uri = new Uri(Navigation.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            var cultureEscaped = Uri.UnescapeDataString(SelectedCulture.Name);
            var uriEscaped = Uri.EscapeDataString(uri);

            Navigation.NavigateTo($"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}", forceLoad: true);
        }
    }
}

@if (Visible)
{
    <div class="modal fade show" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@localizer["Language"]</h5>
                    <button type="button" class="close" @onclick="Close">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <select class="form-control" id="languageSelect" @bind="SelectedCulture">
                                <option value="fr-FR">Fr (Français)</option>
                                <option value="en-US">En (English)</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="ApplyCulture">@localizer["Apply"]</button>
                    <button type="button" class="btn btn-secondary" @onclick="Close">@localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
}
